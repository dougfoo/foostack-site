{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","flexGrow","title","icon","marginRight","spacing","cursor","menuButton","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","media","cardContent","footer","closeButton","position","right","top","grey","border","boxShadow","shadows","galleryInfo","heading","text","imageLink","viewLink","stackInfo","Boolean","window","location","hostname","match","ReactDOM","render","classes","React","useState","open","setOpen","AdapterLink","forwardRef","props","ref","innerRef","handleClose","Fragment","CssBaseline","AppBar","Toolbar","className","onClick","document","Button","Dialog","onClose","aria-labelledby","aria-describedby","maxWidth","fullWidth","PaperProps","style","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","exact","path","Container","gutterBottom","CardMedia","image","paragraph","Grid","container","map","item","key","xs","sm","md","Card","CardContent","component","justify","to","CardActions","size","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62be3c48.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ThreeSixtyIcon from '@material-ui/icons/ThreeSixty';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        FooStack.Ai\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'. Built with '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Material-UI.\n      </Link>\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },  \n  title: {\n    flexGrow: 1,\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n    cursor: 'pointer',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  media: {\n    height: 140,\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst galleryInfo = [\n  {\n    heading: 'Crime Statistics',\n    text: 'Homicide Crime Statistics (Python/Django + Altair) - Live!',\n    imageLink: 'https://source.unsplash.com/random?1',\n    viewLink: 'http://clt-homicide.foostack.ai/chart/',\n  },\n  {\n    heading: 'Ski Planning',\n    text: 'Plan your ski holiday based on weather statistics (React + D3 (Victory) and Spark/DataBricks) - Coming Soon!',\n    imageLink: 'https://source.unsplash.com/random?2',\n    viewLink: 'http://clt-homicide.foostack.ai/',\n  },\n  {\n    heading: 'Diamond Pricing',\n    text: 'Price your diamond on the 4Cs and more (Azure Machine Learning) - Coming Soon!',\n    imageLink: 'https://source.unsplash.com/random?3',\n    viewLink: 'http://clt-homicide.foostack.ai/',\n  },\n]\n\nconst stackInfo = [\n  {\n    heading: 'Visualization',\n    text: 'Javascript React + D3.js based Charting',\n    imageLink: 'https://source.unsplash.com/random?1',\n  },\n  {\n    heading: 'App Server',\n    text: 'Python Django, Express.js on Azure Hosting',\n    imageLink: 'https://source.unsplash.com/random?2',\n  },\n  {\n    heading: 'Machine Learning & Analytics',\n    text: 'Scikit-Learn + Deep Learning frameworks (PyTorch, TensorFlow, Spark, AzureML)',\n    imageLink: 'https://source.unsplash.com/random?3',\n  },\n  {\n    heading: 'Data Management',\n    text: 'MySQL, Hadoop, Oracle to hosted solutions on Azure (Hadoop/HDFS, Cloud SQL, Snowflake)',\n    imageLink: 'https://source.unsplash.com/random?4',\n  },\n  {\n    heading: 'Integrated CI/CD Env',\n    text: 'Get started with a full Agile & CI/CD environment using Azure Pipelines, DevOps Scrum/Kanban and Docker containers',\n    imageLink: 'https://source.unsplash.com/random?5',\n  },\n]\n\nexport default function FooStack() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const dialogHeader = \"Contact Placeholder\";\n  const dialogBody = \"Placeholder for Contact Form w/ Captcha\";\n  const AdapterLink = React.forwardRef((props, ref) => <NavLink innerRef={ref} {...props} />);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <BrowserRouter >\n\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <ThreeSixtyIcon className={classes.icon} onClick={() => { document.location.href = '/'; }}>\n          </ThreeSixtyIcon>\n          <Link variant=\"h6\" className={classes.title} color=\"inherit\" href=\"/\">\n            FooStack.Ai\n          </Link>\n          <Button color=\"inherit\" onClick={handleClickOpen}>Contact</Button>\n        </Toolbar>\n      </AppBar>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        maxWidth=\"md\"\n        fullWidth={true}\n        PaperProps={{\n          style: {\n            backgroundColor: '#d4d7dd',\n            boxShadow: '3',\n          },\n        }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">{dialogHeader}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {dialogBody}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Send\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Hero unit */}\n        <Route exact path=\"/about\" render={() => (\n          <div className={classes.heroContent}>\n            <Container maxWidth=\"md\">\n              <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                FooStack.Ai Origins and History\n              </Typography>\n              <CardMedia\n                  className={classes.media}\n                  image='https://source.unsplash.com/random?8'\n              />\n              <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                The word \"Foo\" has a storied history in computer science from the 50's at MIT and the 70's with origins of C and Unix \n                (K&apos;R).   Foo and bar are common first variables used -- bit of a tech/geek history and play on words.\n              </Typography>\n              <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>              \n                 Doug Foo started coding in Jr High on the Apple II and TRS 80, writing his first adventure games.\n                 Since then he has been a DevOps engineer (before they called it DevOps), DBA and designer,\n                 Software developer, System architect, Data Scientist, Development and Program manager, and a Sr Executive.\n              </Typography>\n              <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>              \n                 Doug is one of the few true \"full stack\" developers who can code front end in React/JS,\n                 backend in Java/Python/C++, build/design SQL and NoSQL databases, implement Machine Learning Models,\n                 and setup the entire Agile &apos; DevOps CI/CD Pipeline from scratch.\n              </Typography>\n            </Container>\n          </div>\n        )} />\n        <Route exact path=\"/stack\" render={() => (\n          <Container className={classes.cardGrid} maxWidth=\"md\">\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            Best of breed full stack components for Data Science.\n            </Typography>\n            <Grid container spacing={4}>\n              {stackInfo.map(card => (\n                <Grid item key={card} xs={12} sm={6} md={4}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image={card.imageLink}\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {card.heading}\n                      </Typography>\n                      <Typography>\n                        {card.text}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Container>\n        )} />\n        <Route exact path=\"/\" render={() => (\n          <main>\n            <div className={classes.heroContent}>\n              <Container maxWidth=\"sm\">\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                  FooStack.Ai\n                </Typography>\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                  FooStack defines a \"Full\" Data Science stack, weaving technologies together best of breed tech\n                  at each layer.  GUI/Presentation, Server logic, Machine Learning, Data Prep and Management</Typography>\n                <div className={classes.heroButtons}>\n                  <Grid container spacing={2} justify=\"center\">\n                    <Grid item>\n                      <Button variant=\"contained\" color=\"primary\" component={AdapterLink} to=\"/stack\">\n                        Full Stack Solutions\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button variant=\"outlined\" color=\"primary\" component={AdapterLink} to=\"/about\">\n                        About Foo\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Container>\n            </div>\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n              {/* End hero unit */}\n              <Grid container spacing={4}>\n                {galleryInfo.map(card => (\n                  <Grid item key={card} xs={12} sm={6} md={4}>\n                    <Card className={classes.card}>\n                      <CardMedia\n                        className={classes.cardMedia}\n                        image={card.imageLink}\n                      />\n                      <CardContent className={classes.cardContent}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {card.heading}\n                        </Typography>\n                        <Typography>\n                          {card.text}\n                        </Typography>\n                      </CardContent>\n                      <CardActions>\n                        <Button size=\"small\" color=\"primary\" href={card.viewLink} >\n                          View\n                        </Button>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                ))}\n              </Grid>\n            </Container>\n          </main>   \n        )}/>   \n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          FooStack Data Science\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Full stack data science architecture and design\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n    </BrowserRouter>\n\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}